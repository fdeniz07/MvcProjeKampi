@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "EditWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<br/>
<h2>Yazar Düzenleme Sayfası</h2>

@using (Html.BeginForm("EditWriter", "Writer", FormMethod.Post))
{
<div class="form-group">
    @*@Html.Label("Yazar ID")*@
    @Html.HiddenFor(x => x.WriterId, new { @class = "form-control" })
    <br/>
    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName, null, new { @class = "text-danger" })
    <br />
    @Html.Label("Yazar Soyadı")
    @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurName)
    <br />
    @Html.Label("Yazar Mail")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />
    @*@Html.Label("Yazar Şifre")*@
    @Html.HiddenFor(x => x.WriterPasswordHash, new { @class = "form-control" })
    @*@Html.ValidationMessageFor(x => x.WriterPasswordHash)
    <br />*@
    @Html.Label("Yazar Görsel Linki")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />
    @Html.Label("Yazar Ünvan")
    @Html.TextBoxFor(x=> x.WriterTitle, new {@class ="form-control"})
    @Html.ValidationMessageFor(x=>x.WriterTitle)
    <br/>
    @Html.Label("Yazar Hakkında")
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br />
    <button class="btn btn-success">Değişiklikleri Uygula</button>
</div>
}
